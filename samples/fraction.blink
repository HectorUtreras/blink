class Fraction(n: Int, d: Int) {
    var g: Int = gcd(n, d)

    var num: Int = n / g

    var den: Int = d / g

    func num(): Int = num

    func setNum(n: Int) = num = n / gcd(n, den)

    func den(): Int = den

    func setDen(d: Int) = den = d / gcd(num, d)

    func +(that: Fraction): Fraction = {
        let n = num * that.den() + den * that.num(),
            d = den * that.den(),
	        g = gcd(n, d)
	    in
            new Fraction(n / g, d /g)
    }

    func +(that: Int): Fraction = this + new Fraction(that, 1)

    func -(that: Fraction): Fraction = {
        let n = num * that.den() - den * that.num(),
            d = den * that.den(),
            g = gcd(n, d)
        in
            new Fraction(n / g, d / g)
    }

    func -(that: Int): Fraction = this - new Fraction(that, 1)

    func *(that: Fraction): Fraction = {
        let n = num * that.num(),
            d = den * that.den(),
	        g = gcd(n, d)
	    in
	        new Fraction(n / g, d / g)
    }

    func *(that: Int): Fraction = this * new Fraction(that, 1)

    func /(that: Fraction): Fraction = this * new Fraction(that.den(), that.num())

    func /(that: Int): Fraction = this / new Fraction(that, 1)

    override func toString(): String = num + if (den > 1) "/" + den else ""

    func gcd(a: Int, b: Int): Int = if (b == 0) a else gcd(b, a % b)
}
