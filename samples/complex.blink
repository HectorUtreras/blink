class Complex(real: Int, im: Int) {
    func real(): Int = real

    func setReal(r: Int) = real = r

    func im(): Int = im

    func setIm(i: Int) = im = i

    func +(that: Complex): Complex = new Complex(real + that.real(), im + that.im())

    func -(that: Complex): Complex = new Complex(real - that.real(), im - that.im())

    func *(that: Complex): Complex = new Complex(
            real * that.real() - im * that.im(),
            real * that.im() + im * that.real()
        )

    func /(that: Complex): Complex = {
        let den = that.real() * that.real() + that.im() * that.im() in {
            new Complex(
                (real * that.real() + im * that.im()) / den,
                (im * that.real() - real * that.im()) / den
            )
        }
    }

    override func ==(that: Object): Bool = {
        if (!that.instanceOf("Complex"))
            false
        else {
            let complex = that as Complex in {
                real == that.real() && im == that.im()
            }
        }
    }

    override func toString(): String = {
        if (real == 0 && im == 0) "0"
        else {
            if (real == 0) im + "i"
            else {
                if (im == 0) real.toString()
                else real + (if (im < 0) " - " + (-im) else " + " + im) + "i"
            }
        }
    }
}
