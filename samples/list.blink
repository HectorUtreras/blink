class List(head: Object) {
    var tail: List = null

    func head(): Object = head

    func tail(): List = tail

    func setTail(t: List) = tail = t

    func +(e: Object): List = {
        let node = this in {
            while (node.tail() != null)
                node = node.tail()

            node.setTail(new List(e))
        }
        this
    }

    func get(index: Int): Object = {
        let i = 0, node = this in {
            while (i <= index && node.tail() != null) {
                i += 1
                node = node.tail()
            }

            if (i <= index) node.head() else null
        }
    }

    func size(): Int = {
        let size = 0, node = this in {
            while (node != null) {
                size += 1
                node = node.tail()
            }
            size
        }
    }

    override func toString(): String = {
        let str = "[", node = this in {
            while (node.tail() != null) {
                str += node.head() + ", "
                node = node.tail()
            }
            str + node.head() + "]"
        }
    }
}